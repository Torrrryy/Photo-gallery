import { useEffect, useState } from "react";
import { Modal } from "../../Components/Layouts/Modal/Modal";
import heart from "../../assets/Img/heart.svg";
import heartActive from "../../assets/Img/heartActive.svg";

export const Fav = () => {
  const [favs, setFavs] = useState<string[]>([]);
  const [selectedPhoto, setSelectedPhoto] = useState<string>("");
  const [open, setOpen] = useState<boolean>(false);
  const [fav, setFav] = useState<boolean>(false);

  useEffect(() => {
    fetchFav();
  }, []);

// –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
useEffect(() => {
  const storedFavs = JSON.parse(localStorage.getItem("Fav") || "[]"); 
  setFav(storedFavs.includes(selectedPhoto)); 
}, [selectedPhoto]); 

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ localStorage
const fetchFav = () => {
  const storedFavs = JSON.parse(localStorage.getItem("Fav") || "[]");
  setFavs(storedFavs); 
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
const openPhoto = (photo: string) => {
  setSelectedPhoto(photo);
  setOpen(true);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const closePhoto = () => {
  setSelectedPhoto(""); 
  setOpen(false); 
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
const downloadPhoto = (photo: string) => {
  const link = document.createElement("a"); 
  link.href = photo; 
  link.download = photo.split("/").pop() || "photo.jpg"; 
  link.click(); 
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
const handleSetFav = () => {
  let existingFavs = JSON.parse(localStorage.getItem("Fav") || "[]"); 

  if (!existingFavs.includes(selectedPhoto)) {
    // –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
    existingFavs.push(selectedPhoto);
    localStorage.setItem("Fav", JSON.stringify(existingFavs));
    setFav(true);
  } else {
    // –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º, —É–¥–∞–ª—è–µ–º –µ—ë
    existingFavs = existingFavs.filter((item: string) => item !== selectedPhoto);
    localStorage.setItem("Fav", JSON.stringify(existingFavs));
    setFav(false);
    fetchFav(); 
    closePhoto(); 
  }
};

return (
  <div className="fav-gallery">
    {/* –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
    {favs.length === 0 ? (
      <p>–ù–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æüòï</p> 
    ) : (
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–∞–ª–µ—Ä–µ—é –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
      favs.map((photo, index) => (
        <div className="gallery-item" key={index}>
          <img
            src={photo} // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            alt={`–ò–∑–±—Ä–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ ${index}`} 
            className="gallery-image" 
            onClick={() => openPhoto(photo)} 
          />
        </div>
      ))
    )}

    {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
    <Modal photo={selectedPhoto} openPhoto={open} onClose={closePhoto}>
      <div className="modalContent">
        {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
        <button className="download-btn" onClick={() => downloadPhoto(selectedPhoto)}>
          –°–∫–∞—á–∞—Ç—å
        </button>
        {/* –ò–∫–æ–Ω–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ, –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è fav */}
        <img
          src={fav ? heartActive : heart}
          onClick={handleSetFav} 
          alt="favorite toggle" 
          style={{ cursor: "pointer" }} 
        />
      </div>
    </Modal>
  </div>
);
};