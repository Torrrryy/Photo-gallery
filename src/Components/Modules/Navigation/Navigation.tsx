import {  Outlet, useNavigate } from "react-router-dom";
import { Categories, Photos } from "../../../Data/Data";
import { useEffect, useState } from "react";
import "./Navigation.css";

export const Navigation = () => {
    const [category, setCategory] = useState<number | null>(null);
    const [searchQuery, setSearchQuery] = useState("");
    const [theme, setTheme] = useState<"light" | "dark">("light");
    const navigate = useNavigate();

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã –∏–∑ localStorage
    useEffect(() => {
        const savedTheme = localStorage.getItem("theme") as "light" | "dark" | null;
        if (savedTheme) {
            setTheme(savedTheme); 
            document.body.className = savedTheme; 
        }
    }, []);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    const toggleTheme = () => {
        const newTheme = theme === "light" ? "dark" : "light"; 
        setTheme(newTheme); 
        document.body.className = newTheme; 
        localStorage.setItem("theme", newTheme); 
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const handleCategoryClick = (id: number, link: string) => {
        setCategory(id); 
        navigate(link); 
    };

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ —Ç–µ–≥–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const filteredPhotos = Photos.filter(photo =>
        photo.category.toLowerCase().includes(searchQuery.toLowerCase()) ||
        (photo.tags ?? []).some(tag =>
            (tag ?? "").toLowerCase().includes(searchQuery.toLowerCase())
        )
    );

    return (
        <>
            {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é */}
            <div className="nav-container">
                {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É */}
                <div
                    className="nav-home"
                    onClick={() => {
                        setCategory(null); 
                        navigate("/"); 
                    }}
                >
                    –ì–ª–∞–≤–Ω–∞—è
                </div>

                {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–≥–∞–º –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
                <input
                    type="text"
                    placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–ø–æ—Ä—Ç–∫–∞—Ä, –ø—Ä–∏—Ä–æ–¥–∞)..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)} 
                    className="search-input"
                />

                {/* –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
                {Categories.map((item) => (
                    <div
                        key={item.id}
                        className={`nav-item ${category === item.id ? "active" : ""}`} 
                        onClick={() => handleCategoryClick(item.id, item.link)} 
                    >
                        {item.category}
                    </div>
                ))}

                {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */}
                <button className="theme-toggle" onClick={toggleTheme}>
                    {theme === "light" ? "üåô –¢—ë–º–Ω–∞—è" : "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è"}
                </button>
            </div>

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å */}
            {searchQuery && (
                <div className="photo-grid">
                    {filteredPhotos.length > 0 ? (
                        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                        filteredPhotos.map((photo) => (
                            <img
                                key={photo.id}
                                src={photo.photo}
                                alt={photo.category}
                                className="photo-item"
                            />
                        ))
                    ) : (
                        <p className="no-results">üòû –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                    )}
                </div>
            )}

            {/* –ú–µ—Å—Ç–æ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ */}
            <Outlet />
        </>
    );
};